version: "3.9"

x-db-credentials: &db-credentials
  MYSQL_DATABASE: ${MYSQL_DATABASE:-agenda_inteligente}
  MYSQL_USER: ${MYSQL_USER:-agenda_user}
  MYSQL_PASSWORD: ${MYSQL_PASSWORD:-Agenda2025!}
  MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-RootPass123@}

services:
  # 🧠 Backend Flask
  backend:
    build: ./backend
    container_name: agenda-backend
    restart: always
    env_file:
      - ./backend/.env
    environment:
      DB_HOST: ${DB_HOST:-db}
      DB_PORT: ${DB_PORT:-3306}
      DB_NAME: ${MYSQL_DATABASE:-agenda_inteligente}
      DB_USER: ${MYSQL_USER:-agenda_user}
      DB_PASSWORD: ${MYSQL_PASSWORD:-Agenda2025!}
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "5000:5000"
    volumes:
      - ./backend:/app
    command: >
      sh -c "python wait_for_db.py && flask run --host=0.0.0.0 --port=5000"

  # 🗄️ Base de datos MySQL
  db:
    image: mysql:8.0.33
    container_name: agenda-db
    restart: always

    # 🌱 Variables de entorno iniciales
    environment:
      <<: *db-credentials

    # 🔌 Puertos
    ports:
      - "3310:3306"    # Acceso local desde host → contenedor

    # 💾 Scripts de inicialización (crea tablas y datos iniciales)
    volumes:
      - ./init_db:/docker-entrypoint-initdb.d:ro
      - mysql_data:/var/lib/mysql

    # 🩺 Healthcheck robusto (espera a que el servidor esté listo)
    healthcheck:
      test: ["CMD-SHELL", "mysqladmin ping -h 127.0.0.1 -p${MYSQL_ROOT_PASSWORD:-RootPass123@} --silent"]
      interval: 15s
      timeout: 10s
      retries: 40
      start_period: 120s

volumes:
  mysql_data:
    driver: local
